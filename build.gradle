import de.gesellix.gradle.docker.tasks.*
import static groovy.json.JsonOutput.prettyPrint
import static groovy.json.JsonOutput.toJson

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
        classpath "de.gesellix:docker-client:2017-02-06T23-15-07"
    }
}

plugins {
  id "de.gesellix.docker" version "2017-02-07T00-26-12"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "de.gesellix.docker"

//apply plugin: 'docker'

jar {
    baseName = 'helloworld-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

//group = 'ipponusa'

//docker {
   // useApi true
    //hostUrl 'http://54.210.169.16:2375/'
//}

ext {
  remoteDockerHost = 'http://54.210.169.16:2375/'
}

task buildDocker(type: DockerBuildTask, dependsOn: build) {
  imageName = "msorg/"+ jar.baseName
  buildContextDirectory = file('./docker/')
  println buildContextDirectory
  doFirst {
      copy {
	     from jar
	     into buildContextDirectory
	   }
   } 
}

task pushImage(type: DockerPushTask) {
  dependsOn buildDocker
  repositoryName = "msorg/"+ jar.baseName
  registry = "docker.io"
}

task pullImage(type: DockerPullTask) {
  dependsOn pushImage
  dockerHost = remoteDockerHost
  imageName = "msorg/"+ jar.baseName
}